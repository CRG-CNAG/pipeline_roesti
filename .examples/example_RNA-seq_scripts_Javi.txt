#######################################################
#RNAseq 
#######################################################
#Paired end, strand-specific
#Need JaviLib.R
#######################################################

for file in `ls *.gz`
do
gunzip $file &
done
#gunzip *.gz #parallelize

for file in `ls *.fastq`
do
maq fastq2bfq $file `basename $file .fastq`.bfq &
done


###get genome.bfa (copy from elsewhere)
cp /work/mycoplasma/genomes/mycoplasma_pneumoniae/NC_000912.bfa .


###maq map
for bfq in `ls *.bfq`
do
maq map -1 40 -n 1 `basename $bfq .bfq`.map NC_000912.bfa $bfq 
done


###map to txt #from myfuntions 
#or "/home/nisusers/eyus/Apps/maq mapview map > map.txt"
source ~/.myfunctions
#MAQMapsToText

#for map in `cat tmp.txt`
#do maq mapview $map > $map.txt &
#done

#clean the duplicated seqs ##takes only reads that uniquely map to 1 position, either with no mismatches or only with one
ls *map.txt >tmp.txt #4 at a time?
for map in `cat tmp.txt`
do
cat $map | awk '{if ($12==1 || ($12==0 && $13==1)) print $0}' > `basename $map .map`.filt 
done


########################
#####Run in cluster#####
########################
ssh eyus@ant-login.linux.crg.es
#Create an arg file, put a "space" before every lane

for filt in `ls *1.map.txt.filt`; do echo $filt `basename $filt 1.map.txt.filt`2.map.txt.filt 40 816394 `basename $filt 1.map.txt.filt`.pile 0 MAQPESS >> args.txt ; done #to make list of jobs

source ~/.myfunctions

writeJobArrayShortMem 1 54 args.txt pileup 150G > job.q #Prepare the Job file (modify, try one first: -t 1-1), this is how it looks like:
	#!/bin/sh
	#$ -t 1-52
	#$ -cwd
	#$ -q short-sl65
	#$ -l virtual_free=120G

	SEEDFILE=args.txt
	SEED=$(awk "NR==$SGE_TASK_ID" $SEEDFILE)


#RUN IT!
qsub job.q 
qstat #see how it is going; qw: queuing
########################
#Run in cluster Fin#####
########################


##Expression calc (make only WO/Overlaps)
#Needs to have in the same folder:
    RNAseqNormalizing_1experiment_PileStrandSwapped.R
    ORFS_2016_reduced_plus.txt
    ORFS_2016_reduced_minus.txt
    JaviLib.R


for pile in `ls *.pile`
do Rscript RNAseqNormalizing_1experiment_PileStrandSwapped.R $pile 
done


#Assemble
ls *.exp > colnames.txt

paste *exp | awk '{print $1"\t"$2"\t"$4"\t"$6"\t"$8"\t"$10"\t"$12"\t"$14"\t"$16"\t"$18"\t"$20"\t"$22"\t"$24"\t"$26"\t"$28"\t"$30"\t"$32"\t"$34"\t"$36"\t"$38"\t"$40"\t"$42"\t"$44"\t"$46"\t"$48"\t"$50"\t"$52"\t"$54"\t"$56"\t"$58"\t"$60"\t"$62"\t"$64"\t"$66"\t"$68"\t"$70"\t"$72"\t"$74"\t"$76"\t"$78"\t"$80"\t"$82"\t"$84"\t"$86"\t"$88"\t"$90"\t"$92"\t"$94"\t"$96"\t"$98"\t"$100"\t"$102"\t"$104}'> data.txt


#Exchange strands
for pile in `ls *pile`
do
  vi $pile -c 1s/minus/tururu/ -c 1s/plus/minus/ -c 1s/tururu/plus/ -c x
done

for pile in `ls *pile`; do   vi $pile -c 1s/minus/tururu/ -c 1s/plus/minus/ -c 1s/tururu/plus/ -c x; done

#Normalize in R 
#Remove 0=>NA
data=read.table("Rdata.txt",row.names=1,header=TRUE)

library(limma)
data.quan=normalizeBetweenArrays(as.matrix(data),m="quantile")
write.table(data.quan,"DataQuan.txt")


